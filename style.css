:root { /* ... existing variables ... */ --rejected-color: #ea4335; }
/* ... existing styles ... */
/* Add styles for Rejected status and Overdue alert */
.status-rejected { background-color: var(--rejected-color); }
.record-property strong.overdue { color: var(--rejected-color); font-weight: bold; }
/* ... rest of the styles are the same ... */```
*မှတ်ချက်: `style.css` မှာ အပြောင်းအလဲ အနည်းငယ်သာရှိတဲ့အတွက်၊ အဟောင်းကိုဆက်သုံးပြီး အပေါ်က `status-rejected` နဲ့ `overdue` style နှစ်ကြောင်းကို ထပ်ထည့်လိုက်ရုံပါပဲ။*

##### **`script.js` (အပြီးသတ် Version)**

```javascript
// --- CONFIGURATION ---
const GOOGLE_SCRIPT_URL = 'သင်၏_APPS_SCRIPT_URL_အသစ်ကိုထည့်ပါ'; 
const IMGBB_API_KEY = 'သင်၏_IMGBB_API_KEY_ကိုထည့်ပါ';

// --- DOM ELEMENTS & STATE (No changes needed here) ---
// ... (All existing DOM element variables)
let cachedData = [];
let currentStatusFilter = 'all';
let currentMonthFilter = 'all';

// --- VIEW SWITCHING (No changes needed here) ---
// ... (Existing switchView function)

// --- DYNAMIC CORRECTIONS LOGIC (No changes needed here) ---
// ... (Existing addCorrectionPair function and its event listener)

// --- FORM SUBMISSION (Updated to include Phone) ---
form.addEventListener('submit', async function(e) {
    e.preventDefault();
    submitButton.disabled = true;
    showToast('Uploading photo...', 'info');

    const corrections = Array.from(document.querySelectorAll('.correction-pair')).map(pair => ({
        mistake: pair.querySelector('.mistake-input').value,
        correction: pair.querySelector('.correction-input').value
    })).filter(c => c.mistake && c.correction);

    const photoFile = form.photoInput.files[0];
    const imgbbFormData = new FormData();
    imgbbFormData.append('image', photoFile);

    try {
        const imgbbResponse = await fetch(`https://api.imgbb.com/1/upload?key=${IMGBB_API_KEY}`, { method: 'POST', body: imgbbFormData });
        const imgbbResult = await imgbbResponse.json();
        if (!imgbbResult.success) throw new Error(imgbbResult.data?.error?.message || 'ImgBB upload failed');
        
        showToast('Saving data...', 'info');
        
        const sheetFormData = new URLSearchParams();
        sheetFormData.append('nrc', form.nrc.value);
        sheetFormData.append('name', form.name.value);
        sheetFormData.append('phone', form.phone.value); // Sending phone number
        sheetFormData.append('submissiondate', form.submissionDate.value);
        sheetFormData.append('status', "စီစစ်ဆဲ");
        sheetFormData.append('imageurl', imgbbResult.data.url); // Standardized to lowercase 'imageurl'
        sheetFormData.append('correctionsdata', JSON.stringify(corrections));
        
        const sheetResponse = await fetch(GOOGLE_SCRIPT_URL, { method: 'POST', body: sheetFormData });
        const sheetResult = await sheetResponse.json();
        if (sheetResult.result !== 'success') throw new Error(sheetResult.message);

        showToast('Record created successfully!', 'success');
        form.reset();
        correctionsContainer.innerHTML = '';
        addCorrectionPair();
        loadAndDisplayRecords(true);

    } catch (error) {
        showToast(`Error: ${error.message}`, 'error');
    } finally {
        submitButton.disabled = false;
    }
});


// --- DASHBOARD & DATA RENDERING (Major Updates) ---
async function loadAndDisplayRecords(forceRefresh = false) {
    if (cachedData.length > 0 && !forceRefresh) {
        populateFiltersAndRender();
        return;
    }
    recordList.innerHTML = '<p>Loading records...</p>';
    try {
        const res = await fetch(GOOGLE_SCRIPT_URL);
        const data = await res.json();
        // **BUG FIX**: Standardize image URL key on client-side
        cachedData = data.filter(r => r.id).map(r => ({ ...r, imageurl: r.imageurl || r.imageUrl }));
        populateFiltersAndRender();
    } catch(err) {
        recordList.innerHTML = `<p>Error loading records: ${err.message}</p>`;
    }
}

function populateFiltersAndRender() {
    // ... (This function remains mostly the same)
    const monthFilter = document.getElementById('monthFilter');
    const months = new Set(cachedData.map(r => new Date(r.submissiondate).toLocaleString('my-MM', { month: 'long', year: 'numeric' })));
    monthFilter.innerHTML = '<option value="all">လအားလုံး</option>';
    months.forEach(m => monthFilter.innerHTML += `<option value="${m}">${m}</option>`);
    monthFilter.value = currentMonthFilter;
    
    renderFilteredRecords();
}

function renderFilteredRecords() {
    const sortedData = cachedData.slice().sort((a, b) => b.id - a.id);
    const filteredData = sortedData.filter(record => {
        const statusMatch = currentStatusFilter === 'all' || record.status === currentStatusFilter;
        const recordMonth = new Date(record.submissiondate).toLocaleString('my-MM', { month: 'long', year: 'numeric' });
        const monthMatch = currentMonthFilter === 'all' || recordMonth === currentMonthFilter;
        return statusMatch && monthMatch;
    });

    recordList.innerHTML = '';
    document.getElementById('recordCount').textContent = filteredData.length;
    if (filteredData.length === 0) {
        recordList.innerHTML = '<p>No matching records found.</p>';
    } else {
        filteredData.forEach(renderRecordCard);
    }
}

function renderRecordCard(record) {
    const card = document.createElement('div');
    card.className = 'record-card';
    const statusClasses = { 'စီစစ်ဆဲ': 'status-pending', 'အတည်ပြုပြီး': 'status-approved', 'ပယ်ဖျက်သည်': 'status-rejected' };
    const statusClass = statusClasses[record.status] || '';

    // Calculate days since submission
    const today = new Date();
    today.setHours(0,0,0,0);
    const submissionDate = new Date(record.submissiondate);
    submissionDate.setHours(0,0,0,0);
    const dayDiff = Math.round((today - submissionDate) / (1000 * 3600 * 24));
    const daysSinceText = `(${dayDiff} ရက် ကြာပြီ)`;
    const overdueClass = (dayDiff > 3 && record.status === 'စီစစ်ဆဲ') ? 'overdue' : '';

    let correctionsHTML = ''; // ... (Existing corrections rendering logic)

    // Action buttons logic updated
    let actionsHTML = `<button class="action-btn delete-btn" onclick="deleteRecord('${record.id}')">ဖျက်ရန်</button>`;
    if (record.status === 'စီစစ်ဆဲ') {
        actionsHTML += `<button class="action-btn" onclick="changeStatus('${record.id}', 'အတည်ပြုပြီး')">အတည်ပြုရန်</button>`;
        actionsHTML += `<button class="action-btn" onclick="changeStatus('${record.id}', 'ပယ်ဖျက်သည်')">ပယ်ဖျက်ရန်</button>`;
    }

    card.innerHTML = `
        <div class="record-card-content">
            <h2>${record.nrc}</h2>
            <div class="record-property"><strong>အမည်:</strong><span>${record.name}</span></div>
            <div class="record-property"><strong>ဖုန်း:</strong><span>${record.phone || 'N/A'}</span></div>
            <div class="record-property"><strong class="${overdueClass}">တင်သွင်းရက်:</strong><span>${submissionDate.toLocaleDateString('en-GB')} ${daysSinceText}</span></div>
            <div class="record-property"><strong>အခြေအနေ:</strong><span><span class="status-tag ${statusClass}">${record.status}</span></span></div>
            ${correctionsHTML}
            <div class="card-actions">${actionsHTML}</div>
        </div>
        ${record.imageurl ? `<img src="${record.imageurl}" alt="Record Photo" class="record-image">` : ''}
    `;
    recordList.appendChild(card);
}

// --- FILTER & ACTION EVENT LISTENERS ---
// ... (Existing filter event listeners)
// ... (Existing changeStatus and deleteRecord functions)
// ... (Existing showToast function)

// --- INITIALIZE ---
// ... (Existing DOMContentLoaded event listener)
